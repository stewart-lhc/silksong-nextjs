{
  "name": "@newsletter-kit/database",
  "version": "1.0.0",
  "description": "Complete database solution for newsletter subscription management with multi-database support",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "tsc",
    "dev": "tsc --watch",
    "clean": "rm -rf dist",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:db": "jest --testPathPattern=database",
    "test:supabase": "jest --testPathPattern=supabase",
    "test:postgresql": "jest --testPathPattern=postgresql",
    "test:mysql": "jest --testPathPattern=mysql",
    "test:sqlite": "jest --testPathPattern=sqlite",
    "test:integration": "jest --testPathPattern=integration",
    "test:performance": "jest --testPathPattern=performance",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "typecheck": "tsc --noEmit",
    "prepare": "npm run build",
    "prepublishOnly": "npm test && npm run lint && npm run typecheck",
    "db:migrate": "ts-node scripts/migrate.ts migrate",
    "db:rollback": "ts-node scripts/migrate.ts rollback",
    "db:status": "ts-node scripts/migrate.ts status",
    "db:create": "ts-node scripts/migrate.ts create",
    "db:drop": "ts-node scripts/migrate.ts drop",
    "db:reset": "ts-node scripts/migrate.ts reset",
    "db:seed": "ts-node scripts/migrate.ts seed",
    "db:backup": "ts-node scripts/backup.ts",
    "db:monitor": "ts-node scripts/monitor.ts",
    "db:health": "ts-node scripts/health-check.ts"
  },
  "keywords": [
    "newsletter",
    "email",
    "subscription",
    "database",
    "supabase",
    "postgresql",
    "mysql",
    "sqlite",
    "analytics",
    "typescript"
  ],
  "author": "Newsletter Kit",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/newsletter-kit/database.git"
  },
  "bugs": {
    "url": "https://github.com/newsletter-kit/database/issues"
  },
  "homepage": "https://docs.newsletter-kit.dev",
  "files": [
    "dist",
    "README.md",
    "LICENSE"
  ],
  "dependencies": {
    "@supabase/supabase-js": "^2.38.0"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.7",
    "@types/jest": "^29.5.8",
    "@types/node": "^20.9.0",
    "@types/pg": "^8.10.8",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "eslint": "^8.54.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2"
  },
  "peerDependencies": {
    "better-sqlite3": "^8.0.0",
    "mysql2": "^3.0.0",
    "pg": "^8.0.0"
  },
  "peerDependenciesMeta": {
    "better-sqlite3": {
      "optional": true
    },
    "mysql2": {
      "optional": true
    },
    "pg": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testMatch": [
      "**/__tests__/**/*.test.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/**/*.test.ts",
      "!src/**/__tests__/**"
    ],
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended"
    ],
    "env": {
      "node": true,
      "es2022": true
    },
    "parserOptions": {
      "ecmaVersion": 2022,
      "sourceType": "module"
    },
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/no-empty-function": "warn"
    }
  }
}